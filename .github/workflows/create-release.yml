# This workflow will create a new release when a version tag is pushed
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-swift

name: Create Release

on:
  push:
    tags:
      - 'v*' # Run when tag matches v*, e.g., v1.0.0

jobs:
  build-and-test:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build
      run: swift build -v
    - name: Run tests
      run: swift test -v

  create-release:
    needs: build-and-test
    runs-on: macos-latest
    permissions:
      contents: write # Needed for creating releases
    steps:
    - uses: actions/checkout@v4
    
    - name: Create application bundle
      run: |
        chmod +x ./build-app.sh
        chmod +x ./convert_icons.sh
        ./build-app.sh
        
    - name: Copy app icon and update Info.plist
      run: |
        # Ensure the Resources directory exists
        mkdir -p NetworkInfo.app/Contents/Resources
        # Copy the app icon
        cp Sources/NetworkInfo/Resources/AppIcon.icns NetworkInfo.app/Contents/Resources/
        
        # Update Info.plist to reference the icon file
        /usr/libexec/PlistBuddy -c "Set :CFBundleIconFile AppIcon.icns" NetworkInfo.app/Contents/Info.plist
    
    - name: Create ZIP archive
      run: |
        echo "Creating ZIP archive of the application..."
        zip -r NetworkInfo.zip NetworkInfo.app
        
        # Verify the ZIP file was created successfully
        if [ ! -f "NetworkInfo.zip" ]; then
          echo "Error: Failed to create ZIP archive"
          exit 1
        fi
        
        echo "ZIP archive created successfully: $(du -h NetworkInfo.zip | cut -f1)"
    
    - name: Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false
        files: |
          NetworkInfo.zip
        body: |
          # NetworkInfo ${{ steps.get_version.outputs.VERSION }}
          
          A native Swift menu bar application that displays network information.
          
          ## Installation
          
          1. Download the NetworkInfo.zip file
          2. Unzip the file
          3. Move NetworkInfo.app to your Applications folder
          4. Open the application
          
          ## Changes in this release
          
          - See the [commit history](https://github.com/${{ github.repository }}/commits/main) for details